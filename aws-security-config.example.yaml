services:
  iam:
    enabled: true
    filters:
      exclude_users:
      - terraform-*
      - ci-*
  s3:
    enabled: true
    regions:
    - us-east-1
    - us-west-2
    filters:
      exclude_buckets:
      - '*-logs-*'
      - '*-backup-*'
  ec2:
    enabled: true
    exclude_regions:
    - ap-south-1
  vpc:
    enabled: true
  rds:
    enabled: false
  cost:
    enabled: true
    # Cost analysis thresholds
    cost_increase_threshold: 20      # Alert on >20% month-over-month increase
    service_spike_threshold: 50      # Alert on >50% service cost increase
    
    # Reserved Instance and Savings Plans thresholds
    ri_coverage_threshold: 70        # Alert when RI coverage <70%
    ri_utilization_threshold: 80     # Alert when RI utilization <80%
    sp_coverage_threshold: 60        # Alert when Savings Plans coverage <60%
    
    # Resource utilization thresholds
    ec2_cpu_low_threshold: 10        # Flag as underutilized when CPU <10%
    ec2_cpu_high_threshold: 90       # Flag as overutilized when CPU >90%
    rds_cpu_threshold: 20            # RDS underutilization threshold
    lambda_memory_threshold: 512     # Flag Lambda functions with >512MB as candidates for optimization
    
    # Cost thresholds for specific services
    nat_gateway_cost_threshold: 100  # Alert when NAT Gateway costs >$100/month
    cross_az_transfer_threshold: 50  # Alert on cross-AZ transfer costs >$50/month
    inter_region_transfer_threshold: 100  # Alert on inter-region transfer >$100/month
    s3_request_cost_threshold: 50    # Alert on S3 request costs >$50/month
    
    # Feature toggles for specific checks
    check_spot_opportunities: true   # Enable Spot instance opportunity detection
    check_container_costs: true      # Enable ECS/Fargate/EKS cost analysis
    check_idle_resources: true       # Enable idle resource detection (SageMaker, etc.)
    enable_cost_forecast: true       # Enable cost forecasting
risk_scoring:
  critical_weight: 100
  high_weight: 80
  medium_weight: 60
  low_weight: 40
  severity_overrides:
    S3 Bucket Without Lifecycle Policy: LOW
    Unused IAM User: HIGH
output:
  format: markdown
  file: security-report.md
  include_passed_checks: false
  suppress_findings:
  - S3 Bucket Using SSE-S3 Instead of SSE-KMS
  group_by: severity
compliance:
  frameworks:
  - NIST
  - CIS
  - SOX
  custom_mappings:
    Custom Finding Type:
    - NIST
    - CIS
scan_name: Production Security Scan
scan_tags:
  environment: production
  team: security
max_concurrent_regions: 5
api_retry_attempts: 3
exclude_resource_tags:
  Environment:
  - development
  - test
  Ignore-Security-Scan:
  - 'true'
include_resource_tags:
  Environment:
  - production
  Critical:
  - 'true'
